*********************************************************
Starting tests at Mon Jan 14 13:00:12 PST 2008
*********************************************************
*********
Regression level: 4
Language: all
Whether to produce / check proofs: depends on testcase
Time limit per test: 1200 sec
PATH = stp/bin:.:/home/vganesh/bin:/home/vganesh/bin/bin:/home/vganesh/stp/bin:/home/vganesh/exe-ccs-06-final/figures:/home/vganesh/cvc3/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/usr/games
*********
===============================================
big-test/dsa_chop_dc.stp.cvc:
Language: all
Checking proofs: no
Expected runtime: 1 sec
Expected result: invalid
STP options: -d
***
Running /home/vganesh/stp/bin/stp -d < /home/vganesh/stp/big-test/dsa_chop_dc.stp.cvc
***
Invalid.
ASSERT( mem_51_533_328[0hex00000000401012BD]  = 0hex00  );
ASSERT( mem_51_533_328[0hex0000000000400014]  = 0hex10  );
ASSERT( mem_51_533_328[0hex00000000401012C7]  = 0hex00  );
ASSERT( mem_51_533_328[0hex00000000401012CD]  = 0hex00  );
ASSERT( mem_51_533_328[0hex00000000401012D6]  = 0hex00  );
ASSERT( mem_51_533_328[0hex00000000401012B6]  = 0hex00  );
ASSERT( mem_51_533_328[0hex0000000000400011]  = 0hex01  );
ASSERT( mem_51_533_328[0hex000000000100001F]  = 0hex29  );
ASSERT( mem_51_533_328[0hex0000000000400012]  = 0hex00  );
ASSERT( R_ESI_2_508_55  = 0hex00000000  );
ASSERT( R_EBX_6_514_190  = 0hex00000000  );
ASSERT( R_ESP_1_507_101  = 0hex401012B0  );
ASSERT( R_EBP_0_515_57  = 0hex00000000  );
ASSERT( R_EDI_3_512_241  = 0hex00000000  );
ASSERT( R_EAX_5_516_36  = 0hex00000000  );
ASSERT( mem_51_533_328[0hex000000007FFFFFFE]  = 0hex00  );
ASSERT( mem_51_533_328[0hex00000000401012E7]  = 0hex00  );
ASSERT( mem_51_533_328[0hex00000000401012D4]  = 0hex00  );
ASSERT( mem_51_533_328[0hex0000000001FFFFFF]  = 0hexE0  );
ASSERT( mem_51_533_328[0hex000000004010129B]  = 0hex00  );
ASSERT( mem_51_533_328[0hex0000000001FFFFEF]  = 0hex18  );
ASSERT( mem_51_533_328[0hex0000000001000019]  = 0hex10  );
ASSERT( mem_51_533_328[0hex0000000001FFFFF9]  = 0hex00  );
ASSERT( mem_51_533_328[0hex000000007FFFFFFA]  = 0hex00  );
ASSERT( mem_51_533_328[0hex00000000401012D5]  = 0hex00  );
ASSERT( mem_51_533_328[0hex0000000001FFFFFC]  = 0hex00  );
ASSERT( mem_51_533_328[0hex0000000040101293]  = 0hex00  );
ASSERT( mem_51_533_328[0hex0000000080000004]  = 0hex0E  );
ASSERT( mem_51_533_328[0hex000000000040000F]  = 0hex88  );
ASSERT( mem_51_533_328[0hex000000007FFFFFF1]  = 0hex9A  );
ASSERT( mem_51_533_328[0hex0000000001000022]  = 0hex00  );
ASSERT( mem_51_533_328[0hex00000000401012C5]  = 0hex00  );
ASSERT( mem_51_533_328[0hex000000000100000F]  = 0hex00  );
ASSERT( mem_51_533_328[0hex0000000040101298]  = 0hex00  );
ASSERT( mem_51_533_328[0hex000000000100001E]  = 0hex00  );
ASSERT( mem_51_533_328[0hex000000000100001A]  = 0hex17  );
ASSERT( mem_51_533_328[0hex0000000040101299]  = 0hex00  );
ASSERT( mem_51_533_328[0hex000000000100001B]  = 0hex01  );
ASSERT( mem_51_533_328[0hex0000000001000010]  = 0hex00  );
ASSERT( mem_51_533_328[0hex0000000001000018]  = 0hex44  );
ASSERT( mem_51_533_328[0hex00000000401012C6]  = 0hex00  );
ASSERT( mem_51_533_328[0hex0000000001FFFFF1]  = 0hex02  );
ASSERT( mem_51_533_328[0hex0000000001FFFFF0]  = 0hex46  );
ASSERT( mem_51_533_328[0hex0000000000400008]  = 0hex37  );
ASSERT( mem_51_533_328[0hex00000000401012E4]  = 0hex00  );
ASSERT( mem_51_533_328[0hex000000007FFFFFFF]  = 0hex05  );
ASSERT( mem_51_533_328[0hex000000007FFFFFFC]  = 0hex58  );
ASSERT( mem_51_533_328[0hex0000000001000012]  = 0hex00  );
ASSERT( mem_51_533_328[0hex0000000001000020]  = 0hex18  );
ASSERT( mem_51_533_328[0hex0000000080000003]  = 0hex48  );
ASSERT( mem_51_533_328[0hex0000000000400007]  = 0hex9F  );
ASSERT( mem_51_533_328[0hex0000000040101292]  = 0hex00  );
ASSERT( mem_51_533_328[0hex0000000001FFFFF7]  = 0hex01  );
ASSERT( mem_51_533_328[0hex0000000080000002]  = 0hex38  );
ASSERT( mem_51_533_328[0hex00000000401012DC]  = 0hex03  );
ASSERT( mem_51_533_328[0hex00000000401012CC]  = 0hex03  );
ASSERT( mem_51_533_328[0hex00000000401012B7]  = 0hex7C  );
ASSERT( mem_51_533_328[0hex0000000040101290]  = 0hex00  );
ASSERT( mem_51_533_328[0hex000000007FFFFFF3]  = 0hex68  );
ASSERT( mem_51_533_328[0hex00000000401012B4]  = 0hex12  );
ASSERT( mem_51_533_328[0hex0000000000400013]  = 0hex00  );
ASSERT( mem_51_533_328[0hex0000000001FFFFFD]  = 0hex48  );
ASSERT( mem_51_533_328[0hex00000000401012BA]  = 0hex88  );
ASSERT( mem_51_533_328[0hex000000004010129A]  = 0hex00  );
ASSERT( mem_51_533_328[0hex0000000001FFFFFA]  = 0hex93  );
ASSERT( mem_51_533_328[0hex0000000002000001]  = 0hex98  );
ASSERT( mem_51_533_328[0hex0000000001FFFFFB]  = 0hex00  );
ASSERT( mem_51_533_328[0hex000000007FFFFFF4]  = 0hex19  );
ASSERT( mem_51_533_328[0hex000000007FFFFFF9]  = 0hexCE  );
ASSERT( mem_51_533_328[0hex0000000001000021]  = 0hex00  );
ASSERT( mem_51_533_328[0hex00000000401012D7]  = 0hex00  );
ASSERT( mem_51_533_328[0hex000000000100001D]  = 0hex00  );
ASSERT( mem_51_533_328[0hex00000000401012B8]  = 0hex1C  );
ASSERT( mem_51_533_328[0hex000000007FFFFFF2]  = 0hex05  );
ASSERT( mem_51_533_328[0hex0000000002000002]  = 0hex8C  );
ASSERT( mem_51_533_328[0hex0000000001000017]  = 0hex95  );
ASSERT( mem_51_533_328[0hex000000007C00220E]  = 0hex0F  );
ASSERT( mem_51_533_328[0hex0000000040101295]  = 0hex00  );
ASSERT( mem_51_533_328[0hex00000000401012E6]  = 0hex00  );
ASSERT( mem_51_533_328[0hex000000000100001C]  = 0hex00  );
ASSERT( mem_51_533_328[0hex0000000000400016]  = 0hex0A  );
ASSERT( mem_51_533_328[0hex0000000001FFFFFE]  = 0hex00  );
ASSERT( mem_51_533_328[0hex000000007C002211]  = 0hex01  );
ASSERT( mem_51_533_328[0hex0000000000400015]  = 0hex04  );
ASSERT( mem_51_533_328[0hex000000007C002210]  = 0hex00  );
ASSERT( mem_51_533_328[0hex0000000040101296]  = 0hex00  );
ASSERT( mem_51_533_328[0hex0000000000400005]  = 0hex3E  );
ASSERT( mem_51_533_328[0hex0000000000400018]  = 0hex80  );
ASSERT( mem_51_533_328[0hex0000000080000000]  = 0hex00  );
ASSERT( mem_51_533_328[0hex00000000401012DD]  = 0hex00  );
ASSERT( mem_51_533_328[0hex000000007FFFFFFD]  = 0hex00  );
ASSERT( mem_51_533_328[0hex00000000401012B5]  = 0hex21  );
ASSERT( mem_51_533_328[0hex000000000040000D]  = 0hex20  );
ASSERT( mem_51_533_328[0hex0000000001FFFFF2]  = 0hex36  );
ASSERT( mem_51_533_328[0hex0000000001FFFFF8]  = 0hex84  );
ASSERT( mem_51_533_328[0hex00000000401012BC]  = 0hex03  );
ASSERT( mem_51_533_328[0hex00000000401012BB]  = 0hex33  );
ASSERT( mem_51_533_328[0hex0000000040101291]  = 0hex00  );
ASSERT( mem_51_533_328[0hex0000000040101294]  = 0hex00  );
ASSERT( mem_51_533_328[0hex000000007FFFFFFB]  = 0hex0C  );
ASSERT( mem_51_533_328[0hex00000000401012C4]  = 0hex00  );
ASSERT( mem_51_533_328[0hex0000000001000011]  = 0hex00  );
ASSERT( mem_51_533_328[0hex000000007C00220F]  = 0hex00  );
ASSERT( mem_51_533_328[0hex0000000040101297]  = 0hex00  );
ASSERT( mem_51_533_328[0hex0000000000400017]  = 0hex00  );
ASSERT( mem_51_533_328[0hex0000000080000001]  = 0hex49  );
ASSERT( mem_51_533_328[0hex00000000401012B9]  = 0hex08  );
ASSERT( mem_51_533_328[0hex0000000000400006]  = 0hex7E  );
ASSERT( mem_51_533_328[0hex00000000401012E5]  = 0hex00  );
ASSERT( mem_51_533_328[0hex0000000002000000]  = 0hex7B  );
ASSERT( mem_51_533_328[0hex0000000000400010]  = 0hexD9  );
ASSERT( mem_51_533_328[0hex000000000040000E]  = 0hex10  );

real	5m11.908s
user	5m9.759s
sys	0m1.084s
Runtime: 311 sec MUCH : LONGER than expected: 1 sec
Result is correct
=============== End of testcase ===============
===============================================
big-test/dsa_chop_noopt-ssa.stp.cvc:
Language: all
Checking proofs: no
Expected runtime: 1 sec
Expected result: invalid
STP options: -d
***
Running /home/vganesh/stp/bin/stp -d < /home/vganesh/stp/big-test/dsa_chop_noopt-ssa.stp.cvc
***
Invalid.
ASSERT( mem_51_533_534[0hex0000000000002056]  = 0hex4D  );
ASSERT( mem_51_533_534[0hex000000000FFFFFF1]  = 0hex00  );
ASSERT( mem_51_533_534[0hex000000000FFFFFF0]  = 0hex16  );
ASSERT( mem_51_533_534[0hex00000000E2C00006]  = 0hex00  );
ASSERT( mem_51_533_534[0hex0000000000002007]  = 0hex4D  );
ASSERT( mem_51_533_534[0hex000000000FFFFFFE]  = 0hex00  );
ASSERT( mem_51_533_534[0hex000000000FFFFFF9]  = 0hex00  );
ASSERT( mem_51_533_534[0hex0000000000002037]  = 0hex49  );
ASSERT( mem_51_533_534[0hex000000000FFFFFFA]  = 0hex00  );
ASSERT( mem_51_533_534[0hex000000000000202B]  = 0hex00  );
ASSERT( mem_51_533_534[0hex0000000000002030]  = 0hexFF  );
ASSERT( mem_51_533_534[0hex00000000E2BFFFF8]  = 0hexD4  );
ASSERT( mem_51_533_534[0hex0000000000002009]  = 0hexF0  );
ASSERT( mem_51_533_534[0hex0000000000002035]  = 0hexE2  );
ASSERT( mem_51_533_534[0hex000000000FFFFFFF]  = 0hex01  );
ASSERT( R_EAX_5_516_516  = 0hex00000000  );
ASSERT( R_ESI_2_508_508  = 0hex00000000  );
ASSERT( R_EBX_6_514_514  = 0hex00000000  );
ASSERT( R_ESP_1_507_507  = 0hex00002021  );
ASSERT( R_EBP_0_515_515  = 0hex00000000  );
ASSERT( R_EDI_3_512_512  = 0hex00000000  );
ASSERT( mem_51_533_534[0hex000000000FFFFFEF]  = 0hex44  );
ASSERT( mem_51_533_534[0hex000000000000203E]  = 0hexF0  );
ASSERT( mem_51_533_534[0hex00000000E2C00007]  = 0hex00  );
ASSERT( mem_51_533_534[0hex00000000E2C00001]  = 0hex10  );
ASSERT( mem_51_533_534[0hex0000000000002057]  = 0hex4D  );
ASSERT( mem_51_533_534[0hex000000000000203D]  = 0hexF0  );
ASSERT( mem_51_533_534[0hex000000000000200C]  = 0hexF0  );
ASSERT( mem_51_533_534[0hex0000000000002047]  = 0hexFF  );
ASSERT( mem_51_533_534[0hex0000000000002008]  = 0hex4D  );
ASSERT( mem_51_533_534[0hex0000000000002026]  = 0hex1F  );
ASSERT( mem_51_533_534[0hex0000000000002029]  = 0hex0F  );
ASSERT( mem_51_533_534[0hex00000000E2BFFFFB]  = 0hex00  );
ASSERT( mem_51_533_534[0hex0000000000002038]  = 0hex44  );
ASSERT( mem_51_533_534[0hex000000000000202A]  = 0hex40  );
ASSERT( mem_51_533_534[0hex0000000010000001]  = 0hex00  );
ASSERT( mem_51_533_534[0hex000000000000200A]  = 0hexF0  );
ASSERT( mem_51_533_534[0hex0000000000002027]  = 0hex00  );
ASSERT( mem_51_533_534[0hex00000000E2C00000]  = 0hex0E  );
ASSERT( mem_51_533_534[0hex0000000000002048]  = 0hexBF  );
ASSERT( mem_51_533_534[0hex00000000E2C00003]  = 0hexB2  );
ASSERT( mem_51_533_534[0hex0000000000002046]  = 0hexF8  );
ASSERT( mem_51_533_534[0hex000000000000202C]  = 0hex00  );
ASSERT( mem_51_533_534[0hex00000000E2C00005]  = 0hex00  );
ASSERT( mem_51_533_534[0hex000000000FFFFFFC]  = 0hex00  );
ASSERT( mem_51_533_534[0hex000000000000202D]  = 0hexF0  );
ASSERT( mem_51_533_534[0hex000000000FFFFFF8]  = 0hex20  );
ASSERT( mem_51_533_534[0hex0000000000002025]  = 0hex32  );
ASSERT( mem_51_533_534[0hex00000000E2BFFFF9]  = 0hex00  );
ASSERT( mem_51_533_534[0hex000000000FFFFFF7]  = 0hex06  );
ASSERT( mem_51_533_534[0hex0000000000002031]  = 0hex0F  );
ASSERT( mem_51_533_534[0hex000000000000200B]  = 0hexF0  );
ASSERT( mem_51_533_534[0hex000000000FFFFFF2]  = 0hex81  );
ASSERT( mem_51_533_534[0hex0000000000002028]  = 0hex00  );
ASSERT( mem_51_533_534[0hex0000000000002055]  = 0hex4D  );
ASSERT( mem_51_533_534[0hex00000000E2C00009]  = 0hex04  );
ASSERT( mem_51_533_534[0hex0000000000002005]  = 0hexFF  );
ASSERT( mem_51_533_534[0hex00000000E2C00002]  = 0hex01  );
ASSERT( mem_51_533_534[0hex000000000FFFFFFB]  = 0hex01  );
ASSERT( mem_51_533_534[0hex0000000010000002]  = 0hex00  );
ASSERT( mem_51_533_534[0hex000000000000204D]  = 0hex03  );
ASSERT( mem_51_533_534[0hex0000000000002006]  = 0hex4D  );
ASSERT( mem_51_533_534[0hex0000000010000000]  = 0hex40  );
ASSERT( mem_51_533_534[0hex00000000E2C00008]  = 0hex09  );
ASSERT( mem_51_533_534[0hex00000000E2C0000A]  = 0hex00  );
ASSERT( mem_51_533_534[0hex000000000000202E]  = 0hexEF  );
ASSERT( mem_51_533_534[0hex00000000E2C0000B]  = 0hex00  );
ASSERT( mem_51_533_534[0hex00000000E2BFFFFA]  = 0hex00  );
ASSERT( mem_51_533_534[0hex0000000000002036]  = 0hex00  );
ASSERT( mem_51_533_534[0hex000000000000202F]  = 0hexFF  );
ASSERT( mem_51_533_534[0hex00000000E2C00004]  = 0hex02  );
ASSERT( mem_51_533_534[0hex000000000FFFFFFD]  = 0hex00  );
ASSERT( mem_51_533_534[0hex0000000000002001]  = 0hex4D  );
ASSERT( mem_51_533_534[0hex0000000000002045]  = 0hex4D  );
ASSERT( mem_51_533_534[0hex0000000000002004]  = 0hex4D  );
ASSERT( mem_51_533_534[0hex000000000000204E]  = 0hex00  );
ASSERT( mem_51_533_534[0hex0000000000002003]  = 0hex4D  );
ASSERT( mem_51_533_534[0hex0000000000002002]  = 0hex4D  );
ASSERT( mem_51_533_534[0hex0000000000002058]  = 0hex4D  );

real	11m40.510s
user	11m38.740s
sys	0m1.760s
Runtime: 701 sec MUCH : LONGER than expected: 1 sec
Result is correct
=============== End of testcase ===============
===============================================
big-test/dsa_chop_noopt.stp.cvc:
Language: all
Checking proofs: no
Expected runtime: 1 sec
Expected result: invalid
STP options: -d
***
Running /home/vganesh/stp/bin/stp -d < /home/vganesh/stp/big-test/dsa_chop_noopt.stp.cvc
***
Invalid.
ASSERT( mem_51_533_534[0hex0000000000002056]  = 0hex4D  );
ASSERT( mem_51_533_534[0hex000000000FFFFFF1]  = 0hex00  );
ASSERT( mem_51_533_534[0hex000000000FFFFFF0]  = 0hex16  );
ASSERT( mem_51_533_534[0hex00000000E2C00006]  = 0hex00  );
ASSERT( mem_51_533_534[0hex0000000000002007]  = 0hex4D  );
ASSERT( mem_51_533_534[0hex000000000FFFFFFE]  = 0hex00  );
ASSERT( mem_51_533_534[0hex000000000FFFFFF9]  = 0hex00  );
ASSERT( mem_51_533_534[0hex0000000000002037]  = 0hex49  );
ASSERT( mem_51_533_534[0hex000000000FFFFFFA]  = 0hex00  );
ASSERT( mem_51_533_534[0hex000000000000202B]  = 0hex00  );
ASSERT( mem_51_533_534[0hex0000000000002030]  = 0hexFF  );
ASSERT( mem_51_533_534[0hex00000000E2BFFFF8]  = 0hexD4  );
ASSERT( mem_51_533_534[0hex0000000000002009]  = 0hexF0  );
ASSERT( mem_51_533_534[0hex0000000000002035]  = 0hexE2  );
ASSERT( mem_51_533_534[0hex000000000FFFFFFF]  = 0hex01  );
ASSERT( R_EAX_5_516_516  = 0hex00000000  );
ASSERT( R_ESI_2_508_508  = 0hex00000000  );
ASSERT( R_EBX_6_514_514  = 0hex00000000  );
ASSERT( R_ESP_1_507_507  = 0hex00002021  );
ASSERT( R_EBP_0_515_515  = 0hex00000000  );
ASSERT( R_EDI_3_512_512  = 0hex00000000  );
ASSERT( mem_51_533_534[0hex000000000FFFFFEF]  = 0hex44  );
ASSERT( mem_51_533_534[0hex000000000000203E]  = 0hexF0  );
ASSERT( mem_51_533_534[0hex00000000E2C00007]  = 0hex00  );
ASSERT( mem_51_533_534[0hex00000000E2C00001]  = 0hex10  );
ASSERT( mem_51_533_534[0hex0000000000002057]  = 0hex4D  );
ASSERT( mem_51_533_534[0hex000000000000203D]  = 0hexF0  );
ASSERT( mem_51_533_534[0hex000000000000200C]  = 0hexF0  );
ASSERT( mem_51_533_534[0hex0000000000002047]  = 0hexFF  );
ASSERT( mem_51_533_534[0hex0000000000002008]  = 0hex4D  );
ASSERT( mem_51_533_534[0hex0000000000002026]  = 0hex1F  );
ASSERT( mem_51_533_534[0hex0000000000002029]  = 0hex0F  );
ASSERT( mem_51_533_534[0hex00000000E2BFFFFB]  = 0hex00  );
ASSERT( mem_51_533_534[0hex0000000000002038]  = 0hex44  );
ASSERT( mem_51_533_534[0hex000000000000202A]  = 0hex40  );
ASSERT( mem_51_533_534[0hex0000000010000001]  = 0hex00  );
ASSERT( mem_51_533_534[0hex000000000000200A]  = 0hexF0  );
ASSERT( mem_51_533_534[0hex0000000000002027]  = 0hex00  );
ASSERT( mem_51_533_534[0hex00000000E2C00000]  = 0hex0E  );
ASSERT( mem_51_533_534[0hex0000000000002048]  = 0hexBF  );
ASSERT( mem_51_533_534[0hex00000000E2C00003]  = 0hexB2  );
ASSERT( mem_51_533_534[0hex0000000000002046]  = 0hexF8  );
ASSERT( mem_51_533_534[0hex000000000000202C]  = 0hex00  );
ASSERT( mem_51_533_534[0hex00000000E2C00005]  = 0hex00  );
ASSERT( mem_51_533_534[0hex000000000FFFFFFC]  = 0hex00  );
ASSERT( mem_51_533_534[0hex000000000000202D]  = 0hexF0  );
ASSERT( mem_51_533_534[0hex000000000FFFFFF8]  = 0hex20  );
ASSERT( mem_51_533_534[0hex0000000000002025]  = 0hex32  );
ASSERT( mem_51_533_534[0hex00000000E2BFFFF9]  = 0hex00  );
ASSERT( mem_51_533_534[0hex000000000FFFFFF7]  = 0hex06  );
ASSERT( mem_51_533_534[0hex0000000000002031]  = 0hex0F  );
ASSERT( mem_51_533_534[0hex000000000000200B]  = 0hexF0  );
ASSERT( mem_51_533_534[0hex000000000FFFFFF2]  = 0hex81  );
ASSERT( mem_51_533_534[0hex0000000000002028]  = 0hex00  );
ASSERT( mem_51_533_534[0hex0000000000002055]  = 0hex4D  );
ASSERT( mem_51_533_534[0hex00000000E2C00009]  = 0hex04  );
ASSERT( mem_51_533_534[0hex0000000000002005]  = 0hexFF  );
ASSERT( mem_51_533_534[0hex00000000E2C00002]  = 0hex01  );
ASSERT( mem_51_533_534[0hex000000000FFFFFFB]  = 0hex01  );
ASSERT( mem_51_533_534[0hex0000000010000002]  = 0hex00  );
ASSERT( mem_51_533_534[0hex000000000000204D]  = 0hex03  );
ASSERT( mem_51_533_534[0hex0000000000002006]  = 0hex4D  );
ASSERT( mem_51_533_534[0hex0000000010000000]  = 0hex40  );
ASSERT( mem_51_533_534[0hex00000000E2C00008]  = 0hex09  );
ASSERT( mem_51_533_534[0hex00000000E2C0000A]  = 0hex00  );
ASSERT( mem_51_533_534[0hex000000000000202E]  = 0hexEF  );
ASSERT( mem_51_533_534[0hex00000000E2C0000B]  = 0hex00  );
ASSERT( mem_51_533_534[0hex00000000E2BFFFFA]  = 0hex00  );
ASSERT( mem_51_533_534[0hex0000000000002036]  = 0hex00  );
ASSERT( mem_51_533_534[0hex000000000000202F]  = 0hexFF  );
ASSERT( mem_51_533_534[0hex00000000E2C00004]  = 0hex02  );
ASSERT( mem_51_533_534[0hex000000000FFFFFFD]  = 0hex00  );
ASSERT( mem_51_533_534[0hex0000000000002001]  = 0hex4D  );
ASSERT( mem_51_533_534[0hex0000000000002045]  = 0hex4D  );
ASSERT( mem_51_533_534[0hex0000000000002004]  = 0hex4D  );
ASSERT( mem_51_533_534[0hex000000000000204E]  = 0hex00  );
ASSERT( mem_51_533_534[0hex0000000000002003]  = 0hex4D  );
ASSERT( mem_51_533_534[0hex0000000000002002]  = 0hex4D  );
ASSERT( mem_51_533_534[0hex0000000000002058]  = 0hex4D  );

real	11m32.889s
user	11m31.939s
sys	0m1.000s
Runtime: 693 sec MUCH : LONGER than expected: 1 sec
Result is correct
=============== End of testcase ===============
===============================================
big-test/dsa_chop_allopt.stp.cvc:
Language: all
Checking proofs: no
Expected runtime: 1 sec
Expected result: invalid
STP options: -d
***
Running /home/vganesh/stp/bin/stp -d < /home/vganesh/stp/big-test/dsa_chop_allopt.stp.cvc
***
Fatal Error: TopLevelSAT: reached the end without proper conclusion:either a divide by zero in the input or a bug in STP

real	5m22.312s
user	5m21.468s
sys	0m0.864s
Runtime: 322 sec MUCH : LONGER than expected: 1 sec
Error: FAILED (no result, expected invalid)
=============== End of testcase ===============
===============================================
big-test/dsa_chop_noopt-nossa.stp.cvc:
Language: all
Checking proofs: no
Expected runtime: 1 sec
Expected result: invalid
STP options: -d
***
Running /home/vganesh/stp/bin/stp -d < /home/vganesh/stp/big-test/dsa_chop_noopt-nossa.stp.cvc
***
Invalid.
ASSERT( mem_534_534[0hex0000000080000034]  = 0hex7E  );
ASSERT( mem_534_534[0hex000000007DFFC02A]  = 0hexB5  );
ASSERT( mem_534_534[0hex000000008000003A]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007FFF7F14]  = 0hex20  );
ASSERT( mem_534_534[0hex000000007DFFC02D]  = 0hex3F  );
ASSERT( mem_534_534[0hex0000000080000038]  = 0hex7C  );
ASSERT( mem_534_534[0hex00000000C4861E25]  = 0hex01  );
ASSERT( mem_534_534[0hex0000000080000064]  = 0hex00  );
ASSERT( mem_534_534[0hex0000000080000046]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007DFFC02C]  = 0hexFF  );
ASSERT( mem_534_534[0hex000000007FFF7F10]  = 0hex00  );
ASSERT( mem_534_534[0hex00000000C4861E1B]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007FFF7F18]  = 0hex01  );
ASSERT( mem_534_534[0hex000000006A20007B]  = 0hex7F  );
ASSERT( mem_534_534[0hex0000000080000010]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007FFF7F13]  = 0hex00  );
ASSERT( mem_534_534[0hex0000000080000054]  = 0hex00  );
ASSERT( mem_534_534[0hex00000000C4861E26]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007DFFC02B]  = 0hexFF  );
ASSERT( mem_534_534[0hex000000007DFFC01A]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007FFF7F11]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007DFFFFEC]  = 0hex00  );
ASSERT( mem_534_534[0hex0000000080000014]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007DFFFFF3]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007DFFFFF1]  = 0hex00  );
ASSERT( mem_534_534[0hex00000000C4861E27]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007DFFC026]  = 0hex00  );
ASSERT( mem_534_534[0hex00000000C4861E28]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007DFFC01D]  = 0hex1D  );
ASSERT( mem_534_534[0hex00000000C4861E1C]  = 0hex00  );
ASSERT( mem_534_534[0hex000000008000001B]  = 0hex00  );
ASSERT( mem_534_534[0hex0000000080000055]  = 0hex00  );
ASSERT( mem_534_534[0hex0000000080000057]  = 0hex00  );
ASSERT( mem_534_534[0hex00000000C4861E2C]  = 0hex00  );
ASSERT( mem_534_534[0hex000000008000004C]  = 0hex03  );
ASSERT( mem_534_534[0hex000000007DFFC01B]  = 0hex39  );
ASSERT( mem_534_534[0hex000000007FFF7F08]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007FFF7F15]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007DFFC023]  = 0hex11  );
ASSERT( mem_534_534[0hex000000007DFFFFEB]  = 0hex00  );
ASSERT( mem_534_534[0hex0000000080000018]  = 0hex00  );
ASSERT( mem_534_534[0hex0000000080000037]  = 0hex6A  );
ASSERT( mem_534_534[0hex000000008000003D]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007FFF7F1A]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007DFFFFED]  = 0hex80  );
ASSERT( mem_534_534[0hex000000008000001A]  = 0hex00  );
ASSERT( mem_534_534[0hex00000000C4861E29]  = 0hex85  );
ASSERT( mem_534_534[0hex0000000080000039]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007FFF7F09]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007FFF7F19]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007FFF7F0A]  = 0hex80  );
ASSERT( mem_534_534[0hex000000008000005C]  = 0hex08  );
ASSERT( mem_534_534[0hex000000006A20007C]  = 0hexFF  );
ASSERT( mem_534_534[0hex000000007DFFFFE4]  = 0hex00  );
ASSERT( mem_534_534[0hex000000008000005D]  = 0hex00  );
ASSERT( mem_534_534[0hex0000000080000045]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007FFF7F07]  = 0hex40  );
ASSERT( mem_534_534[0hex000000007DFFC029]  = 0hex00  );
ASSERT( mem_534_534[0hex0000000080000047]  = 0hex00  );
ASSERT( mem_534_534[0hex0000000080000036]  = 0hex1F  );
ASSERT( mem_534_534[0hex000000007DFFFFEF]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007DFFFFE5]  = 0hex00  );
ASSERT( mem_534_534[0hex00000000C4861E2A]  = 0hex41  );
ASSERT( mem_534_534[0hex000000007FFF7F16]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007DFFFFF5]  = 0hex80  );
ASSERT( mem_534_534[0hex000000007DFFFFF0]  = 0hex00  );
ASSERT( mem_534_534[0hex0000000080000015]  = 0hex00  );
ASSERT( mem_534_534[0hex0000000080000067]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007DFFC024]  = 0hex50  );
ASSERT( mem_534_534[0hex000000008000003B]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007FFF7F12]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007DFFFFF4]  = 0hex00  );
ASSERT( mem_534_534[0hex000000006A20007D]  = 0hex7F  );
ASSERT( mem_534_534[0hex00000000C4861E19]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007DFFC022]  = 0hex86  );
ASSERT( mem_534_534[0hex00000000C4861E21]  = 0hexEC  );
ASSERT( mem_534_534[0hex000000007DFFFFEE]  = 0hex16  );
ASSERT( mem_534_534[0hex0000000080000017]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007DFFC025]  = 0hex71  );
ASSERT( mem_534_534[0hex000000007DFFFFE2]  = 0hex56  );
ASSERT( mem_534_534[0hex000000007DFFFFF2]  = 0hex04  );
ASSERT( mem_534_534[0hex00000000C4861E2B]  = 0hex11  );
ASSERT( mem_534_534[0hex0000000080000013]  = 0hex00  );
ASSERT( mem_534_534[0hex00000000C4861E23]  = 0hex0C  );
ASSERT( mem_534_534[0hex0000000080000019]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007FFF7F17]  = 0hex04  );
ASSERT( mem_534_534[0hex000000007DFFC01C]  = 0hex2C  );
ASSERT( mem_534_534[0hex000000007DFFFFEA]  = 0hex00  );
ASSERT( mem_534_534[0hex0000000080000056]  = 0hex00  );
ASSERT( mem_534_534[0hex0000000080000035]  = 0hexFF  );
ASSERT( mem_534_534[0hex00000000C4861E24]  = 0hex04  );
ASSERT( mem_534_534[0hex0000000080000044]  = 0hex00  );
ASSERT( mem_534_534[0hex000000006A20007A]  = 0hex07  );
ASSERT( R_EAX_5_516_517  = 0hex00000000  );
ASSERT( mem_534_534[0hex00000000C4861E22]  = 0hexF0  );
ASSERT( R_ESI_2_508_509  = 0hex00000000  );
ASSERT( mem_534_534[0hex0000000080000011]  = 0hex00  );
ASSERT( mem_534_534[0hex000000008000003C]  = 0hex03  );
ASSERT( mem_534_534[0hex000000007DFFC027]  = 0hex00  );
ASSERT( R_EBX_6_514_515  = 0hex00000000  );
ASSERT( mem_534_534[0hex0000000080000066]  = 0hex00  );
ASSERT( mem_534_534[0hex0000000080000065]  = 0hex00  );
ASSERT( R_ESP_1_507_508  = 0hex80000030  );
ASSERT( mem_534_534[0hex00000000C4861E1A]  = 0hex00  );
ASSERT( R_EBP_0_515_516  = 0hex00000000  );
ASSERT( mem_534_534[0hex0000000080000012]  = 0hex00  );
ASSERT( R_EDI_3_512_513  = 0hex00000000  );
ASSERT( mem_534_534[0hex000000007FFF7F0F]  = 0hex00  );
ASSERT( mem_534_534[0hex0000000080000016]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007DFFFFE3]  = 0hex00  );
ASSERT( mem_534_534[0hex000000007DFFC028]  = 0hex10  );
ASSERT( mem_534_534[0hex000000008000004D]  = 0hex00  );

real	0m50.726s
user	0m50.311s
sys	0m0.420s
Runtime: 51 sec MUCH : LONGER than expected: 1 sec
Result is correct
=============== End of testcase ===============

Statistics:
Total tests run: 5
Total running time: 2078 sec
Total number of proofs checked: 0
Problematic cases: 5

Detailed Statistics:
Failed tests [1]:
  big-test/dsa_chop_allopt.stp.cvc
Tests running longer [5]:
  big-test/dsa_chop_dc.stp.cvc
  big-test/dsa_chop_noopt-ssa.stp.cvc
  big-test/dsa_chop_noopt.stp.cvc
  big-test/dsa_chop_allopt.stp.cvc
  big-test/dsa_chop_noopt-nossa.stp.cvc
...including tests running WAY too long [5]:
  big-test/dsa_chop_dc.stp.cvc
  big-test/dsa_chop_noopt-ssa.stp.cvc
  big-test/dsa_chop_noopt.stp.cvc
  big-test/dsa_chop_allopt.stp.cvc
  big-test/dsa_chop_noopt-nossa.stp.cvc
